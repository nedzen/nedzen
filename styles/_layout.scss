// Grid
// enable grid - needs grid ? make it an option
.wrap {
  // height: 100%;
  @include media-breakpoint-up(sm) {
    margin: 0 $site-margin;
  }

  // max-width: $site-width
  padding-left: calc($gutter / 2);
  padding-right: calc($gutter / 2);
  position: relative;
}

// Layout sections ---------------------------------------
section {
  padding-bottom: $unit;
  margin-bottom: $unit;

  @include media-breakpoint-up(md) {
    padding-bottom: $unit * 2;
    margin-bottom: $unit * 2;
  }

  &:first-child {
    padding-top: $unit * 3;
    @include media-breakpoint-up(sm) {
      padding-top: $unit * 5;
    }
  }

  &.featured {
    position: relative;
    overflow: hidden;
    height: 80vh;
  }

  &.dark {
    background-color: black;
  }
}

main {
  min-height: 100vh;
}

// footer {
// 	min-height: $footer-h * 1vh;
// }

// Grid ---------------------------------------
.row {
  display: block !important;
  @include transition(200ms);
}

.col {
  flex: 1;
}

@include media-breakpoint-down(sm) {
  [class*='col-'],
  [class*='row'] {
    margin-bottom: $unit_7;

    &:last-child {
      margin-bottom: 0;
    }
  }

  // [class*='row'] {
  //   // outline: 1px solid blue

  // }
}

@include media-breakpoint-up(md) {
  .row {
    @include display-flex;

    // evrika, forces last row to behave.
    flex-flow: row wrap;
    position: relative;
    padding-left: calc($gutter / 2);
    padding-right: calc($gutter / 2);
    margin-right: -1 * calc($gutter / 2);
    margin-left: -1 * calc($gutter / 2);

    *[class^='#{$class-slug}'] {
      padding-left: calc($gutter / 2);
      padding-right: calc($gutter / 2);
    }

    // this is not needed apparently
    // .#{$class-slug}-#{$grid}
    // 	background-color: $pink-2
    // 	flex: 1 100%
  }

  // makes grid columns
  @for $i from 1 through $grid {
    .#{$class-slug}-#{$i} {
      width: $col * $i;
    }
  }

  @for $i from 1 through $grid {
    .push-#{$i} {
      margin-left: $col * $i;
    }
  }
}

// ---------------------------------------------
// Finding a way to dynamically produce sizes
// ---------------------------------------------
// $_unit: 16;
// $_units: 16;
//
// // increment by 0.25
// $unit_1: to-rem($_unit * 0.25); // 4
// $unit_2: to-rem($_unit * 0.5); // 8
// $unit_3: to-rem($_unit * 0.75); // 12
// $unit_4: to-rem($_unit * 1); // 16
//
// // increment by 0.5
// $unit_5: to-rem($_unit * 1.5); // 24
//
// // increment by 1
// $unit_6: to-rem($_unit * 2); // 32
// $unit_7: to-rem($_unit * 3); // 48
// $unit_8: to-rem($_unit * 4); // 62
//
// // increment by 2
// $unit_9: to-rem($_unit * 6); // 96
// $unit_10: to-rem($_unit * 8); // 128
//
// // increment by 4
// $unit_11: to-rem($_unit * 12); // 192
// $unit_12: to-rem($_unit * 16); // 256
//
// // increment by 8
// $unit_13: to-rem($_unit * 24); // 384
// $unit_14: to-rem($_unit * 32); // 512
// $unit_15: to-rem($_unit * 40); // 640
// $unit_16: to-rem($_unit * 48); // 768

// HELPER class not needed
// .unit-1
// 	width: $unit_1
// .unit-2
// 	width: $unit_2
// .unit-3
// 	width: $unit_3
// .unit-4
// 	width: $unit_4
// .unit-5
// 	width: $unit_5
// .unit-6
// 	width: $unit_6
// .unit-7
// 	width: $unit_7
// .unit-8
// 	width: $unit_8
// .unit-9
// 	width: $unit_9
// .unit-10
// 	width: $unit_10
// .unit-11
// 	width: $unit_11
// .unit-12
// 	width: $unit_12
// .unit-13
// 	width: $unit_13
// .unit-14
// 	width: $unit_14
// .unit-15
// 	width: $unit_15
// .unit-16
// 	width: $unit_16

// .mb-8
// 	margin-bottom: $unit_8!important
//
// .mb-7
// 	margin-bottom: $unit_7!important

.mb0 {
  margin-bottom: 0px;
}
